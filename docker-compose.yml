services:
  proxy:
    image: jwilder/nginx-proxy:1.7
    container_name: proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-conf:/etc/nginx/conf.d
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - ./config/nginx/dhis2.conf:/etc/nginx/vhost.d/default_location:ro
    environment:
      - DEFAULT_HOST=${DHIS2_DOMAIN:-localhost}
    restart: unless-stopped
    networks:
      - frontend

  app:
    image: dhis2/core:${DHIS2_VERSION}
    volumes:
      - dhis2:/opt/dhis2/
      #- ./config/dhis2/log4j2.xml:/opt/dhis2/log4j2.xml:ro
      - ./config/dhis2/dhis.conf:/opt/dhis2/dhis.conf:ro
    environment:
      - VIRTUAL_HOST=${DHIS2_DOMAIN:-localhost}
      - VIRTUAL_PORT=8080
      - VIRTUAL_PROTO=http
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/dhis-web-login/"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 120s
    depends_on:
      database:
        condition: service_healthy
      proxy:
        condition: service_started
    expose:
      - "8080"
    networks:
      - frontend
      - backend

  database:
    image: bitnami/postgresql:${POSTGRESQL_VERSION}
    volumes:
      - postgres:/bitnami/postgresql
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_DATABASE: ${POSTGRESQL_DATABASE}
      POSTGRESQL_POSTGRES_PASSWORD: ${POSTGRESQL_POSTGRES_PASSWORD}
      PGPASSWORD: ${POSTGRESQL_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRESQL_USERNAME} -d ${POSTGRESQL_DATABASE}",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend

volumes:
  dhis2: {}
  postgres: {}
  nginx-conf: {}
  nginx-vhost: {}
  nginx-html: {}

networks:
  frontend:
    driver: bridge
    name: dhis2_frontend
  backend:
    driver: bridge
    name: dhis2_backend
    internal: true
