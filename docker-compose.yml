services:
  app:
    image: dhis2/core:${DHIS2_VERSION:-42}
    volumes:
      - dhis2:/opt/dhis2/
      #- ./config/dhis2/log4j2.xml:/opt/dhis2/log4j2.xml:ro
      - ./config/dhis2/dhis.conf:/opt/dhis2/dhis.conf:ro
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:8080/dhis-web-login/" ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 120s
    depends_on:
      database:
        condition: service_healthy
    environment:
      VIRTUAL_HOST: ${DHIS2_DOMAIN:-dhis2-127-0-0-1.nip.io}
      POSTGRESQL_USERNAME: ${POSTGRES_USER}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_DATABASE: ${POSTGRES_DB:-dhis}

  database:
    image: postgis/postgis:${POSTGRESQL_VERSION:-17-3.4}
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-dhis}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    healthcheck:
      test: [ "CMD-SHELL","pg_isready -U postgres -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 3

  proxy:
    image: jwilder/nginx-proxy:1.7
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - "80:80"

volumes:
  dhis2: { }
  postgres: { }
