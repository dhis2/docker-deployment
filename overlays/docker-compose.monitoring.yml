services:
  app:
    environment:
      - MONITORING_API_ENABLED=on
      - MONITORING_JVM_ENABLED=on
      - MONITORING_DBPOOL_ENABLED=on
      - MONITORING_HIBERNATE_ENABLED=on
      - MONITORING_UPTIME_ENABLED=on
      - MONITORING_CPU_ENABLED=on

  # This is needed to avoid permission issues with the loki container when running as non-root user
  loki-init:
    image: busybox:1.37.0
    user: root
    volumes:
      - loki:/loki
    command: ["sh", "-c", "mkdir -p /loki/chunks /loki/rules /loki/wal /loki/boltdb-shipper-compactor && chown -R 65534:65534 /loki"]

  loki:
    image: grafana/loki:2.9.0
    restart: unless-stopped
    user: 65534:65534
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    volumes:
      - loki:/loki
    ports:
      - "3100:3100"
    environment:
      - LOKI_RETENTION_PERIOD=${LOKI_RETENTION_PERIOD:-744h}
    depends_on:
      - loki-init
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://host.docker.internal:3100/ready"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s

  prometheus:
    image: prom/prometheus:v2.45.0
    restart: unless-stopped
    user: 65534:65534
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    volumes:
      - prometheus:/prometheus
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    environment:
      - PROMETHEUS_RETENTION_TIME=${PROMETHEUS_RETENTION_TIME:-15d}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s

  grafana:
    image: grafana/grafana:10.0.0
    restart: unless-stopped
    user: 472:472
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    volumes:
      - grafana:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_LOG_LEVEL=warn
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SERVER_ROOT_URL=https://grafana.${HOSTNAME}
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

volumes:
  loki: { }
  prometheus: { }
  grafana: { }
